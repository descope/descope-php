name: Composer, Linter, Tests and License Check

on:
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]

jobs:
  staged-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Setup PHP
      #   uses: shivammathur/setup-php@v2
      #   with:
      #     php-version: "8.1"
      #     tools: composer, cs2pr

      # - name: Validate composer.json and composer.lock
      #   run: composer validate

      # - name: Install dependencies
      #   run: composer install --prefer-dist --no-progress

      # - name: Run PHP CodeSniffer
      #   run: vendor/bin/phpcs --standard=PSR2 --extensions=php src

      # - name: Run PHPUnit tests
      #   run: composer run-script test

      # - name: Check License
      #   run: composer run-script license-check

      - name: Configure Git
        run: git config --global user.email "actions@github.com" && git config --global user.name "GitHub Actions"

      - name: Determine Release Type
        id: determine_release_type
        run: |
          COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})
          if echo "$COMMIT_MESSAGE" | grep -qiE "major release"; then
            echo "::set-output name=release_type::major"
          elif echo "$COMMIT_MESSAGE" | grep -qiE "minor release"; then
            echo "::set-output name=release_type::minor"
          else
            echo "::set-output name=release_type::none"
          fi

      - name: Bump Version and Create Release
        id: bump_version_and_release
        uses: anothrNick/github-tag-action@1.26.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: ${{ steps.determine_release_type.outputs.release_type }}
        if: steps.determine_release_type.outputs.release_type != 'none'

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump_version_and_release.outputs.new_tag }}
          release_name: Release ${{ steps.bump_version_and_release.outputs.new_tag }}
          draft: false
          prerelease: false
